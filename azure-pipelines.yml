# openrqm-client-desktop-nwjs
# Azure DevOps Pipeline for building the openrqm-client-desktop-nwjs project
# SPDX-License-Identifier: GPL-2.0-only
# Copyright (C) 2019 Benjamin Schilling

trigger:
- master
- development

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    mkdir -p debian
    cp -r * debian/
    cd debian
    dpkg-buildpackage -uc -us
    cd ..
  displayName: 'Debian packaging'

# First install angular-cli
- script: |
    npm install -g @angular/cli
    npm install --save-dev @angular-devkit/build-angular
  displayName: 'Install angular-cli'

# Build the angular project
- script: |
    ng build
  displayName: 'Build angular project'

# Download and extract the NW.js binaries
- script: |
    wget https://dl.nwjs.io/v0.40.0/nwjs-v0.40.0-win-x64.zip
  displayName: 'Download NW.js Windows'

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '*.zip' 
    destinationFolder: archive_path/

# Copy angular build output to NW.js directory and tar the content
- script: |
    mkdir archive_path/nwjs-v0.40.0-win-x64/package.nw/
    cp nw-package.json archive_path/nwjs-v0.40.0-win-x64/package.nw/package.json
    cp -r dist/openrqm-client-desktop-nwjs/* archive_path/nwjs-v0.40.0-win-x64/package.nw/
    cd archive_path/nwjs-v0.40.0-win-x64/
    ls -al
    tar -czf ../../openrqm-client-desktop-nwjs.tar.gz *
    ls -al
    cd ../..
    ls -al
  displayName: 'Copy angular build output to archive directory'

# Convert Documentation to PDF
- script: |
    sudo apt-get install pandoc texlive
    npm install -g pandoc-plantuml
  displayName: 'install required tools'


- script: |
    pandoc -F pandoc-plantuml -o README.pdf README.md
    pandoc -F pandoc-plantuml -o ARCHITECTURE.pdf doc/ARCHITECTURE.md
    pandoc -F pandoc-plantuml -o WIREFRAME.pdf doc/WIREFRAME.md
    ls -al
  displayName: 'pandoc convert'

- script: |
    echo '##vso[task.setvariable variable=releasetag]release'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  displayName: 'Set Release Tag if master branch'

- script: |
    echo '##vso[task.setvariable variable=releasetag]latest'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/development')
  displayName: 'Set Release Tag if development branch'

- task: GithubRelease@0 
  condition: or(and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master')), and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/development')))
  displayName: 'Create GitHub Release'      
  inputs:
    gitHubConnection: benjaminSchilling33
    repositoryName: openrqm/openrqm-client-desktop-nwjs
    action: edit
    tagSource: manual
    tag: $(releasetag) 
    assetUploadMode: replace
    assets: |
         $(Build.Repository.LocalPath)/README.pdf
         $(Build.Repository.LocalPath)/ARCHITECTURE.pdf
         $(Build.Repository.LocalPath)/WIREFRAME.pdf
         $(Build.Repository.LocalPath)/openrqm-client-desktop-nwjs.tar.gz
